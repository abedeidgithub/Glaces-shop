
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Vector;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Gamal Rashad
 */
public class Masrofat extends javax.swing.JFrame {
 Connection con = null;    
     PreparedStatement pst = null;
     ResultSet rs = null;
      ResultSetMetaData rsmeta;
    /**
     * Creates new form Masrofat
     */
    public Masrofat() {
        initComponents();
                        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
conn=Connect.connect();
reset();
    }
     int id ;
    public void reset(){
    txtMasrofat.setText(null);
    txtValue.setText("0");
    jDateChooser.setDate(null);
 defult();
    }
    public void defult(){
        
           try {
                            

//txtShumberNum.setText("0");


            String sql = "SELECT * FROM `masrofat` ";
            preparedStatement = conn.prepareStatement(sql);
            resultSet = preparedStatement.executeQuery();
            String sql1 = " SELECT  ID as `ID` , `date` as `التاريخ `,`value` as ` القيمة`, `masaryInfo` as `نوع المصروفات` FROM `masrofat` ";
            PreparedStatement preparedStatement1 = conn.prepareStatement(sql1);
            ResultSet rs = preparedStatement1.executeQuery();
            if (resultSet.next()) {
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error Here : " + e.getMessage());
            e.printStackTrace();
        }


}
     Connection conn = null;
    PreparedStatement preparedStatement = null;
    ResultSet resultSet = null;
//    SimpleDateFormat format1 = new SimpleDateFormat("yyyy-mm-dd");
//    java.sql.Date date;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        txtValue = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMasrofat = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        upDateBtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("صادر");

        jPanel2.setBackground(new java.awt.Color(237, 234, 234));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), new java.awt.Color(204, 204, 204)));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(105, 105, 93));
        jLabel13.setText("نوع المصروفات");

        jDateChooser.setBackground(new java.awt.Color(255, 255, 204));
        jDateChooser.setDateFormatString("yyyy-MM-dd");

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(105, 105, 105));
        jLabel14.setText("تاريخ اليوم");

        txtValue.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtValue.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtValueKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValueKeyTyped(evt);
            }
        });

        jLabel31.setBackground(new java.awt.Color(255, 255, 255));
        jLabel31.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(105, 105, 93));
        jLabel31.setText("القيمة");

        txtMasrofat.setColumns(20);
        txtMasrofat.setRows(5);
        jScrollPane2.setViewportView(txtMasrofat);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel31)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel31))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(153, 153, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/New folder/Floppy-Small-icon.png"))); // NOI18N
        jButton1.setText("حفظ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        upDateBtn.setBackground(new java.awt.Color(153, 153, 153));
        upDateBtn.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        upDateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/New folder/Actions-edit-redo-icon.png"))); // NOI18N
        upDateBtn.setText("تعديل");
        upDateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upDateBtnActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(153, 153, 153));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/New folder/document-add-icon.png"))); // NOI18N
        jButton4.setText("تحديث البرنامج");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(153, 153, 153));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/New folder/Close-2-icon.png"))); // NOI18N
        jButton6.setText("حذف");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(153, 153, 153));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/New folder/Actions-window-close-icon - Copy.png"))); // NOI18N
        jButton5.setText("رجوع");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(204, 204, 255));
        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(upDateBtn)
                        .addGap(10, 10, 10)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(upDateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtValueKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValueKeyReleased
      

        // TODO add your handling code here:
    }//GEN-LAST:event_txtValueKeyReleased

    private void txtValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValueKeyTyped

        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == evt.VK_BACK_SPACE || c == '.')) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "غير مسموح بكتابه حروف");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValueKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(txtMasrofat.getText().isEmpty() || txtValue.getText().isEmpty())
{
JOptionPane.showMessageDialog(null, "برحاء إدخال البيانات ");
}

String sdate = ((JTextField) jDateChooser.getDateEditor().getUiComponent()).getText();



 con =  Connect.connect();
    
        String sql="INSERT INTO `masrofat`( `value`, `masaryInfo`, `date`) VALUES ('"+Double.parseDouble(txtValue.getText())+"' ,'"+txtMasrofat.getText()+"' ,'"+sdate+" ')";
      try{
      pst = con.prepareStatement(sql);
      pst.execute();
              JOptionPane.showMessageDialog(null, "تم الحفظ بنجاح");
      
      }
      catch(Exception e){
      JOptionPane.showMessageDialog(null,  e.getMessage());
      
      }

               try{     
   String sql2 ="Select * from masrofat "; 
    pst = con.prepareStatement(sql2);
    rs = pst.executeQuery();
    //jTable1v.setModel(DbUtils.resultSetToTableModel(rs));
   
   Vector<String> colName = new Vector<String>();
             colName.add("كود ");
             jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            colName.add("القيمه");
            colName.add(" تفاصيل المصروفات");
           
            colName.add("التاريخ");
           /* 
           jTable1v.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
jTable1v.getColumnModel().getColumn(0).setPreferredWidth(27);
jTable1v.getColumnModel().getColumn(1).setPreferredWidth(120);
jTable1v.getColumnModel().getColumn(2).setPreferredWidth(100);
jTable1v.getColumnModel().getColumn(3).setPreferredWidth(90);
jTable1v.getColumnModel().getColumn(4).setPreferredWidth(90);

           */
            Vector<Vector> rows = new Vector<Vector>();

            

            rsmeta = rs.getMetaData();
            for (int i = 1; i <= rsmeta.getColumnCount(); i++) {
               // colName.add(rsmeta.getColumnName(i));
            }
            while (rs.next()) {
                Vector<String> oneRow = new Vector<String>();
                for (int i = 1; i <= rsmeta.getColumnCount(); i++) {
                    oneRow.add(rs.getString(i));

                }
                rows.add(oneRow);
            }

            DefaultTableModel tableModel = new DefaultTableModel(rows, colName);
          jTable1.setModel(tableModel);
jTable1.setShowHorizontalLines(true);
jTable1.setShowVerticalLines(true);
jTable1.scrollRectToVisible(jTable1.getCellRect(jTable1.getRowCount()-1, 0, true));
   }
   catch(Exception e){
   
    JOptionPane.showMessageDialog(null, e.getMessage());
   }
         ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer())
                    .setHorizontalAlignment((int) JLabel.CENTER_ALIGNMENT);

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);
            jTable1.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            for (int x = 0; x < jTable1.getColumnCount(); x++) {
                jTable1.getColumnModel().getColumn(x).setCellRenderer(centerRenderer);
            }  

        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void upDateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upDateBtnActionPerformed

        if (txtMasrofat.getText().equals("") || txtValue.getText().equals("")) {
            
            JOptionPane.showMessageDialog(this, "برجاء إختيار البيانات المراد تعديلها من الجدول");
            
        }
            
            
                String sdate = ((JTextField) jDateChooser.getDateEditor().getUiComponent()).getText();
con =  Connect.connect();
           try{
      String sql="UPDATE `masrofat` SET `date`='"+sdate+ " ',`value`='"+Double.parseDouble(txtValue.getText())+"' ,`masaryInfo`='"+txtMasrofat.getText()+" ' WHERE id='"+id+"'";
          pst = con.prepareStatement(sql);
      pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "تم التعديل بنجاح");
                   
                    reset();
      }
      catch(Exception e){
      JOptionPane.showMessageDialog(null, e.getMessage());
      }
            
//             String sql= "update masrofat set date= '" + sdate + "', value ='"+Double.parseDouble(txtValue.getText())+"', masaryInfo ='"+txtMasrofat.getText()+"' where id ='"+id+"'";
  
                 try{     
   String sql2 ="Select * from masrofat "; 
    pst = con.prepareStatement(sql2);
    rs = pst.executeQuery();
    //jTable1v.setModel(DbUtils.resultSetToTableModel(rs));
   
   Vector<String> colName = new Vector<String>();
             colName.add("كود ");
             jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            colName.add("القيمه");
            colName.add(" تفاصيل المصروفات");
           
            colName.add("التاريخ");
           /* 
           jTable1v.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
jTable1v.getColumnModel().getColumn(0).setPreferredWidth(27);
jTable1v.getColumnModel().getColumn(1).setPreferredWidth(120);
jTable1v.getColumnModel().getColumn(2).setPreferredWidth(100);
jTable1v.getColumnModel().getColumn(3).setPreferredWidth(90);
jTable1v.getColumnModel().getColumn(4).setPreferredWidth(90);

           */
            Vector<Vector> rows = new Vector<Vector>();

            

            rsmeta = rs.getMetaData();
            for (int i = 1; i <= rsmeta.getColumnCount(); i++) {
               // colName.add(rsmeta.getColumnName(i));
            }
            while (rs.next()) {
                Vector<String> oneRow = new Vector<String>();
                for (int i = 1; i <= rsmeta.getColumnCount(); i++) {
                    oneRow.add(rs.getString(i));

                }
                rows.add(oneRow);
            }

            DefaultTableModel tableModel = new DefaultTableModel(rows, colName);
          jTable1.setModel(tableModel);
jTable1.setShowHorizontalLines(true);
jTable1.setShowVerticalLines(true);
jTable1.scrollRectToVisible(jTable1.getCellRect(jTable1.getRowCount()-1, 0, true));
   }
   catch(Exception e){
   
    JOptionPane.showMessageDialog(null, e.getMessage());
   }
         ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer())
                    .setHorizontalAlignment((int) JLabel.CENTER_ALIGNMENT);

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);
            jTable1.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            for (int x = 0; x < jTable1.getColumnCount(); x++) {
                jTable1.getColumnModel().getColumn(x).setCellRenderer(centerRenderer);
            }  

                  
      
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_upDateBtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                reset();
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
 if(txtMasrofat.getText().isEmpty() && txtValue.getText().isEmpty()  ){
            JOptionPane.showMessageDialog(null, " برجاء تحديد البيانات المراد حذفها من الجدول  ");
        }
        
         else{
     

      
            
            if (txtMasrofat.getText().equals(""))
            {
            JOptionPane.showMessageDialog(null, " برجاء تحديد البيانات المراد حذفها من الجدول  ");
            }
          
                
                  con =  Connect.connect();
        int r  = jTable1.getSelectedRow();
        String n = jTable1.getModel().getValueAt(r, 0).toString();
        int P = JOptionPane.showConfirmDialog(null, " Are you sure want to delete ?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (P == 0) {
            String sql = "delete  from masrofat where id = '"+ n +"'";
            try{
                pst = con.prepareStatement(sql);
                pst.executeUpdate();

          
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, " خطأفي حذف البيانات ");
        }
                
 try{     
   String sql2 ="Select * from masrofat "; 
    pst = con.prepareStatement(sql2);
    rs = pst.executeQuery();
    //jTable1v.setModel(DbUtils.resultSetToTableModel(rs));
   
   Vector<String> colName = new Vector<String>();
             colName.add("كود ");
             jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
            colName.add("القيمه");
            colName.add(" تفاصيل المصروفات");
           
            colName.add("التاريخ");
           /* 
           jTable1v.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
jTable1v.getColumnModel().getColumn(0).setPreferredWidth(27);
jTable1v.getColumnModel().getColumn(1).setPreferredWidth(120);
jTable1v.getColumnModel().getColumn(2).setPreferredWidth(100);
jTable1v.getColumnModel().getColumn(3).setPreferredWidth(90);
jTable1v.getColumnModel().getColumn(4).setPreferredWidth(90);

           */
            Vector<Vector> rows = new Vector<Vector>();

            

            rsmeta = rs.getMetaData();
            for (int i = 1; i <= rsmeta.getColumnCount(); i++) {
               // colName.add(rsmeta.getColumnName(i));
            }
            while (rs.next()) {
                Vector<String> oneRow = new Vector<String>();
                for (int i = 1; i <= rsmeta.getColumnCount(); i++) {
                    oneRow.add(rs.getString(i));

                }
                rows.add(oneRow);
            }

            DefaultTableModel tableModel = new DefaultTableModel(rows, colName);
          jTable1.setModel(tableModel);
jTable1.setShowHorizontalLines(true);
jTable1.setShowVerticalLines(true);
jTable1.scrollRectToVisible(jTable1.getCellRect(jTable1.getRowCount()-1, 0, true));
   }
   catch(Exception e){
   
    JOptionPane.showMessageDialog(null, e.getMessage());
   }
         ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer())
                    .setHorizontalAlignment((int) JLabel.CENTER_ALIGNMENT);

            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(JLabel.CENTER);
            jTable1.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            for (int x = 0; x < jTable1.getColumnCount(); x++) {
                jTable1.getColumnModel().getColumn(x).setCellRenderer(centerRenderer);
            }  

        
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed
 }}
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.setVisible(false);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
                
        
        con = Connect.connect();
        int r  = jTable1.getSelectedRow();
        String n = jTable1.getModel().getValueAt(r, 0).toString();
        try{
            String sql = "Select * from masrofat where id = '"+ n +"'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()){

                id = rs.getInt("id");
                
                
                Double value = rs.getDouble("value");
                txtValue.setText(value+"");

                 Date date = rs.getDate("date");
                jDateChooser.setDate(date);
                
              
                
                String 	masaryInfo = rs.getString("masaryInfo");
                txtMasrofat.setText(masaryInfo+"");
                
                
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());

        }
        
        
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Masrofat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Masrofat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Masrofat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Masrofat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Masrofat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea txtMasrofat;
    private javax.swing.JTextField txtValue;
    private javax.swing.JButton upDateBtn;
    // End of variables declaration//GEN-END:variables

    private void fillTxt() {
        
        
    }
}
